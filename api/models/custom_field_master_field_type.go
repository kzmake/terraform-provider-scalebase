// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// CustomFieldMasterFieldType カスタムフィールドタイプ
//
// swagger:model CustomFieldMasterFieldType
type CustomFieldMasterFieldType string

func NewCustomFieldMasterFieldType(value CustomFieldMasterFieldType) *CustomFieldMasterFieldType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated CustomFieldMasterFieldType.
func (m CustomFieldMasterFieldType) Pointer() *CustomFieldMasterFieldType {
	return &m
}

const (

	// CustomFieldMasterFieldTypeFIELDTYPECUSTOMER captures enum value "FIELD_TYPE_CUSTOMER"
	CustomFieldMasterFieldTypeFIELDTYPECUSTOMER CustomFieldMasterFieldType = "FIELD_TYPE_CUSTOMER"

	// CustomFieldMasterFieldTypeFIELDTYPECONTRACT captures enum value "FIELD_TYPE_CONTRACT"
	CustomFieldMasterFieldTypeFIELDTYPECONTRACT CustomFieldMasterFieldType = "FIELD_TYPE_CONTRACT"
)

// for schema
var customFieldMasterFieldTypeEnum []interface{}

func init() {
	var res []CustomFieldMasterFieldType
	if err := json.Unmarshal([]byte(`["FIELD_TYPE_CUSTOMER","FIELD_TYPE_CONTRACT"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		customFieldMasterFieldTypeEnum = append(customFieldMasterFieldTypeEnum, v)
	}
}

func (m CustomFieldMasterFieldType) validateCustomFieldMasterFieldTypeEnum(path, location string, value CustomFieldMasterFieldType) error {
	if err := validate.EnumCase(path, location, value, customFieldMasterFieldTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this custom field master field type
func (m CustomFieldMasterFieldType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateCustomFieldMasterFieldTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this custom field master field type based on context it is used
func (m CustomFieldMasterFieldType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
