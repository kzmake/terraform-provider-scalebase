// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1ListAmendmentsRequest 改定の検索リクエスト
//
// swagger:model v1ListAmendmentsRequest
type V1ListAmendmentsRequest struct {

	// ソート条件
	// example:
	// ```
	// { "orderBy": [ { "field": "FIELD_EXECUTE_DATE", "direction": "DIRECTION_DESCENDING" } ] }
	// ```
	OrderBy *ListAmendmentsRequestOrder `json:"orderBy,omitempty"`

	// 一覧取得する最大数
	// Required: true
	PageSize *int32 `json:"pageSize"`

	// 一覧取得に使用するトークン
	PageToken string `json:"pageToken,omitempty"`
}

// Validate validates this v1 list amendments request
func (m *V1ListAmendmentsRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOrderBy(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePageSize(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1ListAmendmentsRequest) validateOrderBy(formats strfmt.Registry) error {
	if swag.IsZero(m.OrderBy) { // not required
		return nil
	}

	if m.OrderBy != nil {
		if err := m.OrderBy.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("orderBy")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("orderBy")
			}
			return err
		}
	}

	return nil
}

func (m *V1ListAmendmentsRequest) validatePageSize(formats strfmt.Registry) error {

	if err := validate.Required("pageSize", "body", m.PageSize); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this v1 list amendments request based on the context it is used
func (m *V1ListAmendmentsRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateOrderBy(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1ListAmendmentsRequest) contextValidateOrderBy(ctx context.Context, formats strfmt.Registry) error {

	if m.OrderBy != nil {

		if swag.IsZero(m.OrderBy) { // not required
			return nil
		}

		if err := m.OrderBy.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("orderBy")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("orderBy")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1ListAmendmentsRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1ListAmendmentsRequest) UnmarshalBinary(b []byte) error {
	var res V1ListAmendmentsRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
