// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ContractItemStatus - STATUS_WAITING_ACTIVATION: 有効化待ち
//   - STATUS_IN_TRIAL: トライアル
//   - STATUS_WAITING_TRIAL_CANCELLATION: トライアル解約待ち
//   - STATUS_TRIAL_CANCELED: トライアル解約
//   - STATUS_ACTIVE: 有効
//   - STATUS_WAITING_CANCELLATION: 解約待ち
//   - STATUS_CANCELED: 途中解約
//   - STATUS_WAITING_COMPLETION: 終了待ち
//   - STATUS_COMPLETED: 終了
//   - STATUS_INVALIDATED: 無効
//
// swagger:model ContractItemStatus
type ContractItemStatus string

func NewContractItemStatus(value ContractItemStatus) *ContractItemStatus {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ContractItemStatus.
func (m ContractItemStatus) Pointer() *ContractItemStatus {
	return &m
}

const (

	// ContractItemStatusSTATUSWAITINGACTIVATION captures enum value "STATUS_WAITING_ACTIVATION"
	ContractItemStatusSTATUSWAITINGACTIVATION ContractItemStatus = "STATUS_WAITING_ACTIVATION"

	// ContractItemStatusSTATUSINTRIAL captures enum value "STATUS_IN_TRIAL"
	ContractItemStatusSTATUSINTRIAL ContractItemStatus = "STATUS_IN_TRIAL"

	// ContractItemStatusSTATUSWAITINGTRIALCANCELLATION captures enum value "STATUS_WAITING_TRIAL_CANCELLATION"
	ContractItemStatusSTATUSWAITINGTRIALCANCELLATION ContractItemStatus = "STATUS_WAITING_TRIAL_CANCELLATION"

	// ContractItemStatusSTATUSTRIALCANCELED captures enum value "STATUS_TRIAL_CANCELED"
	ContractItemStatusSTATUSTRIALCANCELED ContractItemStatus = "STATUS_TRIAL_CANCELED"

	// ContractItemStatusSTATUSACTIVE captures enum value "STATUS_ACTIVE"
	ContractItemStatusSTATUSACTIVE ContractItemStatus = "STATUS_ACTIVE"

	// ContractItemStatusSTATUSWAITINGCANCELLATION captures enum value "STATUS_WAITING_CANCELLATION"
	ContractItemStatusSTATUSWAITINGCANCELLATION ContractItemStatus = "STATUS_WAITING_CANCELLATION"

	// ContractItemStatusSTATUSCANCELED captures enum value "STATUS_CANCELED"
	ContractItemStatusSTATUSCANCELED ContractItemStatus = "STATUS_CANCELED"

	// ContractItemStatusSTATUSWAITINGCOMPLETION captures enum value "STATUS_WAITING_COMPLETION"
	ContractItemStatusSTATUSWAITINGCOMPLETION ContractItemStatus = "STATUS_WAITING_COMPLETION"

	// ContractItemStatusSTATUSCOMPLETED captures enum value "STATUS_COMPLETED"
	ContractItemStatusSTATUSCOMPLETED ContractItemStatus = "STATUS_COMPLETED"

	// ContractItemStatusSTATUSINVALIDATED captures enum value "STATUS_INVALIDATED"
	ContractItemStatusSTATUSINVALIDATED ContractItemStatus = "STATUS_INVALIDATED"
)

// for schema
var contractItemStatusEnum []interface{}

func init() {
	var res []ContractItemStatus
	if err := json.Unmarshal([]byte(`["STATUS_WAITING_ACTIVATION","STATUS_IN_TRIAL","STATUS_WAITING_TRIAL_CANCELLATION","STATUS_TRIAL_CANCELED","STATUS_ACTIVE","STATUS_WAITING_CANCELLATION","STATUS_CANCELED","STATUS_WAITING_COMPLETION","STATUS_COMPLETED","STATUS_INVALIDATED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		contractItemStatusEnum = append(contractItemStatusEnum, v)
	}
}

func (m ContractItemStatus) validateContractItemStatusEnum(path, location string, value ContractItemStatus) error {
	if err := validate.EnumCase(path, location, value, contractItemStatusEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this contract item status
func (m ContractItemStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateContractItemStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this contract item status based on context it is used
func (m ContractItemStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
