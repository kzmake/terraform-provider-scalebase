// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V1ProviderAddressPrefecture 都道府県
//
// swagger:model v1ProviderAddressPrefecture
type V1ProviderAddressPrefecture string

func NewV1ProviderAddressPrefecture(value V1ProviderAddressPrefecture) *V1ProviderAddressPrefecture {
	return &value
}

// Pointer returns a pointer to a freshly-allocated V1ProviderAddressPrefecture.
func (m V1ProviderAddressPrefecture) Pointer() *V1ProviderAddressPrefecture {
	return &m
}

const (

	// V1ProviderAddressPrefecturePREFECTUREHOKKAIDO captures enum value "PREFECTURE_HOKKAIDO"
	V1ProviderAddressPrefecturePREFECTUREHOKKAIDO V1ProviderAddressPrefecture = "PREFECTURE_HOKKAIDO"

	// V1ProviderAddressPrefecturePREFECTUREAOMORI captures enum value "PREFECTURE_AOMORI"
	V1ProviderAddressPrefecturePREFECTUREAOMORI V1ProviderAddressPrefecture = "PREFECTURE_AOMORI"

	// V1ProviderAddressPrefecturePREFECTUREIWATE captures enum value "PREFECTURE_IWATE"
	V1ProviderAddressPrefecturePREFECTUREIWATE V1ProviderAddressPrefecture = "PREFECTURE_IWATE"

	// V1ProviderAddressPrefecturePREFECTUREMIYAGI captures enum value "PREFECTURE_MIYAGI"
	V1ProviderAddressPrefecturePREFECTUREMIYAGI V1ProviderAddressPrefecture = "PREFECTURE_MIYAGI"

	// V1ProviderAddressPrefecturePREFECTUREAKITA captures enum value "PREFECTURE_AKITA"
	V1ProviderAddressPrefecturePREFECTUREAKITA V1ProviderAddressPrefecture = "PREFECTURE_AKITA"

	// V1ProviderAddressPrefecturePREFECTUREYAMAGATA captures enum value "PREFECTURE_YAMAGATA"
	V1ProviderAddressPrefecturePREFECTUREYAMAGATA V1ProviderAddressPrefecture = "PREFECTURE_YAMAGATA"

	// V1ProviderAddressPrefecturePREFECTUREFUKUSHIMA captures enum value "PREFECTURE_FUKUSHIMA"
	V1ProviderAddressPrefecturePREFECTUREFUKUSHIMA V1ProviderAddressPrefecture = "PREFECTURE_FUKUSHIMA"

	// V1ProviderAddressPrefecturePREFECTUREIBARAKI captures enum value "PREFECTURE_IBARAKI"
	V1ProviderAddressPrefecturePREFECTUREIBARAKI V1ProviderAddressPrefecture = "PREFECTURE_IBARAKI"

	// V1ProviderAddressPrefecturePREFECTURETOCHIGI captures enum value "PREFECTURE_TOCHIGI"
	V1ProviderAddressPrefecturePREFECTURETOCHIGI V1ProviderAddressPrefecture = "PREFECTURE_TOCHIGI"

	// V1ProviderAddressPrefecturePREFECTUREGUNMA captures enum value "PREFECTURE_GUNMA"
	V1ProviderAddressPrefecturePREFECTUREGUNMA V1ProviderAddressPrefecture = "PREFECTURE_GUNMA"

	// V1ProviderAddressPrefecturePREFECTURESAITAMA captures enum value "PREFECTURE_SAITAMA"
	V1ProviderAddressPrefecturePREFECTURESAITAMA V1ProviderAddressPrefecture = "PREFECTURE_SAITAMA"

	// V1ProviderAddressPrefecturePREFECTURECHIBA captures enum value "PREFECTURE_CHIBA"
	V1ProviderAddressPrefecturePREFECTURECHIBA V1ProviderAddressPrefecture = "PREFECTURE_CHIBA"

	// V1ProviderAddressPrefecturePREFECTURETOKYO captures enum value "PREFECTURE_TOKYO"
	V1ProviderAddressPrefecturePREFECTURETOKYO V1ProviderAddressPrefecture = "PREFECTURE_TOKYO"

	// V1ProviderAddressPrefecturePREFECTUREKANAGAWA captures enum value "PREFECTURE_KANAGAWA"
	V1ProviderAddressPrefecturePREFECTUREKANAGAWA V1ProviderAddressPrefecture = "PREFECTURE_KANAGAWA"

	// V1ProviderAddressPrefecturePREFECTURENIIGATA captures enum value "PREFECTURE_NIIGATA"
	V1ProviderAddressPrefecturePREFECTURENIIGATA V1ProviderAddressPrefecture = "PREFECTURE_NIIGATA"

	// V1ProviderAddressPrefecturePREFECTURETOYAMA captures enum value "PREFECTURE_TOYAMA"
	V1ProviderAddressPrefecturePREFECTURETOYAMA V1ProviderAddressPrefecture = "PREFECTURE_TOYAMA"

	// V1ProviderAddressPrefecturePREFECTUREISHIKAWA captures enum value "PREFECTURE_ISHIKAWA"
	V1ProviderAddressPrefecturePREFECTUREISHIKAWA V1ProviderAddressPrefecture = "PREFECTURE_ISHIKAWA"

	// V1ProviderAddressPrefecturePREFECTUREFUKUI captures enum value "PREFECTURE_FUKUI"
	V1ProviderAddressPrefecturePREFECTUREFUKUI V1ProviderAddressPrefecture = "PREFECTURE_FUKUI"

	// V1ProviderAddressPrefecturePREFECTUREYAMANASHI captures enum value "PREFECTURE_YAMANASHI"
	V1ProviderAddressPrefecturePREFECTUREYAMANASHI V1ProviderAddressPrefecture = "PREFECTURE_YAMANASHI"

	// V1ProviderAddressPrefecturePREFECTURENAGANO captures enum value "PREFECTURE_NAGANO"
	V1ProviderAddressPrefecturePREFECTURENAGANO V1ProviderAddressPrefecture = "PREFECTURE_NAGANO"

	// V1ProviderAddressPrefecturePREFECTUREGIFU captures enum value "PREFECTURE_GIFU"
	V1ProviderAddressPrefecturePREFECTUREGIFU V1ProviderAddressPrefecture = "PREFECTURE_GIFU"

	// V1ProviderAddressPrefecturePREFECTURESHIZUOKA captures enum value "PREFECTURE_SHIZUOKA"
	V1ProviderAddressPrefecturePREFECTURESHIZUOKA V1ProviderAddressPrefecture = "PREFECTURE_SHIZUOKA"

	// V1ProviderAddressPrefecturePREFECTUREAICHI captures enum value "PREFECTURE_AICHI"
	V1ProviderAddressPrefecturePREFECTUREAICHI V1ProviderAddressPrefecture = "PREFECTURE_AICHI"

	// V1ProviderAddressPrefecturePREFECTUREMIE captures enum value "PREFECTURE_MIE"
	V1ProviderAddressPrefecturePREFECTUREMIE V1ProviderAddressPrefecture = "PREFECTURE_MIE"

	// V1ProviderAddressPrefecturePREFECTURESHIGA captures enum value "PREFECTURE_SHIGA"
	V1ProviderAddressPrefecturePREFECTURESHIGA V1ProviderAddressPrefecture = "PREFECTURE_SHIGA"

	// V1ProviderAddressPrefecturePREFECTUREKYOTO captures enum value "PREFECTURE_KYOTO"
	V1ProviderAddressPrefecturePREFECTUREKYOTO V1ProviderAddressPrefecture = "PREFECTURE_KYOTO"

	// V1ProviderAddressPrefecturePREFECTUREOSAKA captures enum value "PREFECTURE_OSAKA"
	V1ProviderAddressPrefecturePREFECTUREOSAKA V1ProviderAddressPrefecture = "PREFECTURE_OSAKA"

	// V1ProviderAddressPrefecturePREFECTUREHYOGO captures enum value "PREFECTURE_HYOGO"
	V1ProviderAddressPrefecturePREFECTUREHYOGO V1ProviderAddressPrefecture = "PREFECTURE_HYOGO"

	// V1ProviderAddressPrefecturePREFECTURENARA captures enum value "PREFECTURE_NARA"
	V1ProviderAddressPrefecturePREFECTURENARA V1ProviderAddressPrefecture = "PREFECTURE_NARA"

	// V1ProviderAddressPrefecturePREFECTUREWAKAYAMA captures enum value "PREFECTURE_WAKAYAMA"
	V1ProviderAddressPrefecturePREFECTUREWAKAYAMA V1ProviderAddressPrefecture = "PREFECTURE_WAKAYAMA"

	// V1ProviderAddressPrefecturePREFECTURETOTTORI captures enum value "PREFECTURE_TOTTORI"
	V1ProviderAddressPrefecturePREFECTURETOTTORI V1ProviderAddressPrefecture = "PREFECTURE_TOTTORI"

	// V1ProviderAddressPrefecturePREFECTURESHIMANE captures enum value "PREFECTURE_SHIMANE"
	V1ProviderAddressPrefecturePREFECTURESHIMANE V1ProviderAddressPrefecture = "PREFECTURE_SHIMANE"

	// V1ProviderAddressPrefecturePREFECTUREOKAYAMA captures enum value "PREFECTURE_OKAYAMA"
	V1ProviderAddressPrefecturePREFECTUREOKAYAMA V1ProviderAddressPrefecture = "PREFECTURE_OKAYAMA"

	// V1ProviderAddressPrefecturePREFECTUREHIROSHIMA captures enum value "PREFECTURE_HIROSHIMA"
	V1ProviderAddressPrefecturePREFECTUREHIROSHIMA V1ProviderAddressPrefecture = "PREFECTURE_HIROSHIMA"

	// V1ProviderAddressPrefecturePREFECTUREYAMAGUCHI captures enum value "PREFECTURE_YAMAGUCHI"
	V1ProviderAddressPrefecturePREFECTUREYAMAGUCHI V1ProviderAddressPrefecture = "PREFECTURE_YAMAGUCHI"

	// V1ProviderAddressPrefecturePREFECTURETOKUSHIMA captures enum value "PREFECTURE_TOKUSHIMA"
	V1ProviderAddressPrefecturePREFECTURETOKUSHIMA V1ProviderAddressPrefecture = "PREFECTURE_TOKUSHIMA"

	// V1ProviderAddressPrefecturePREFECTUREKAGAWA captures enum value "PREFECTURE_KAGAWA"
	V1ProviderAddressPrefecturePREFECTUREKAGAWA V1ProviderAddressPrefecture = "PREFECTURE_KAGAWA"

	// V1ProviderAddressPrefecturePREFECTUREEHIME captures enum value "PREFECTURE_EHIME"
	V1ProviderAddressPrefecturePREFECTUREEHIME V1ProviderAddressPrefecture = "PREFECTURE_EHIME"

	// V1ProviderAddressPrefecturePREFECTUREKOCHI captures enum value "PREFECTURE_KOCHI"
	V1ProviderAddressPrefecturePREFECTUREKOCHI V1ProviderAddressPrefecture = "PREFECTURE_KOCHI"

	// V1ProviderAddressPrefecturePREFECTUREFUKUOKA captures enum value "PREFECTURE_FUKUOKA"
	V1ProviderAddressPrefecturePREFECTUREFUKUOKA V1ProviderAddressPrefecture = "PREFECTURE_FUKUOKA"

	// V1ProviderAddressPrefecturePREFECTURESAGA captures enum value "PREFECTURE_SAGA"
	V1ProviderAddressPrefecturePREFECTURESAGA V1ProviderAddressPrefecture = "PREFECTURE_SAGA"

	// V1ProviderAddressPrefecturePREFECTURENAGASAKI captures enum value "PREFECTURE_NAGASAKI"
	V1ProviderAddressPrefecturePREFECTURENAGASAKI V1ProviderAddressPrefecture = "PREFECTURE_NAGASAKI"

	// V1ProviderAddressPrefecturePREFECTUREKUMAMOTO captures enum value "PREFECTURE_KUMAMOTO"
	V1ProviderAddressPrefecturePREFECTUREKUMAMOTO V1ProviderAddressPrefecture = "PREFECTURE_KUMAMOTO"

	// V1ProviderAddressPrefecturePREFECTUREOITA captures enum value "PREFECTURE_OITA"
	V1ProviderAddressPrefecturePREFECTUREOITA V1ProviderAddressPrefecture = "PREFECTURE_OITA"

	// V1ProviderAddressPrefecturePREFECTUREMIYAZAKI captures enum value "PREFECTURE_MIYAZAKI"
	V1ProviderAddressPrefecturePREFECTUREMIYAZAKI V1ProviderAddressPrefecture = "PREFECTURE_MIYAZAKI"

	// V1ProviderAddressPrefecturePREFECTUREKAGOSHIMA captures enum value "PREFECTURE_KAGOSHIMA"
	V1ProviderAddressPrefecturePREFECTUREKAGOSHIMA V1ProviderAddressPrefecture = "PREFECTURE_KAGOSHIMA"

	// V1ProviderAddressPrefecturePREFECTUREOKINAWA captures enum value "PREFECTURE_OKINAWA"
	V1ProviderAddressPrefecturePREFECTUREOKINAWA V1ProviderAddressPrefecture = "PREFECTURE_OKINAWA"
)

// for schema
var v1ProviderAddressPrefectureEnum []interface{}

func init() {
	var res []V1ProviderAddressPrefecture
	if err := json.Unmarshal([]byte(`["PREFECTURE_HOKKAIDO","PREFECTURE_AOMORI","PREFECTURE_IWATE","PREFECTURE_MIYAGI","PREFECTURE_AKITA","PREFECTURE_YAMAGATA","PREFECTURE_FUKUSHIMA","PREFECTURE_IBARAKI","PREFECTURE_TOCHIGI","PREFECTURE_GUNMA","PREFECTURE_SAITAMA","PREFECTURE_CHIBA","PREFECTURE_TOKYO","PREFECTURE_KANAGAWA","PREFECTURE_NIIGATA","PREFECTURE_TOYAMA","PREFECTURE_ISHIKAWA","PREFECTURE_FUKUI","PREFECTURE_YAMANASHI","PREFECTURE_NAGANO","PREFECTURE_GIFU","PREFECTURE_SHIZUOKA","PREFECTURE_AICHI","PREFECTURE_MIE","PREFECTURE_SHIGA","PREFECTURE_KYOTO","PREFECTURE_OSAKA","PREFECTURE_HYOGO","PREFECTURE_NARA","PREFECTURE_WAKAYAMA","PREFECTURE_TOTTORI","PREFECTURE_SHIMANE","PREFECTURE_OKAYAMA","PREFECTURE_HIROSHIMA","PREFECTURE_YAMAGUCHI","PREFECTURE_TOKUSHIMA","PREFECTURE_KAGAWA","PREFECTURE_EHIME","PREFECTURE_KOCHI","PREFECTURE_FUKUOKA","PREFECTURE_SAGA","PREFECTURE_NAGASAKI","PREFECTURE_KUMAMOTO","PREFECTURE_OITA","PREFECTURE_MIYAZAKI","PREFECTURE_KAGOSHIMA","PREFECTURE_OKINAWA"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1ProviderAddressPrefectureEnum = append(v1ProviderAddressPrefectureEnum, v)
	}
}

func (m V1ProviderAddressPrefecture) validateV1ProviderAddressPrefectureEnum(path, location string, value V1ProviderAddressPrefecture) error {
	if err := validate.EnumCase(path, location, value, v1ProviderAddressPrefectureEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this v1 provider address prefecture
func (m V1ProviderAddressPrefecture) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV1ProviderAddressPrefectureEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this v1 provider address prefecture based on context it is used
func (m V1ProviderAddressPrefecture) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
