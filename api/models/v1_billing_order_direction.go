// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V1BillingOrderDirection 順序
//
// - DIRECTION_ASCENDING: 昇順
//   - DIRECTION_DESCENDING: 降順
//
// swagger:model v1BillingOrderDirection
type V1BillingOrderDirection string

func NewV1BillingOrderDirection(value V1BillingOrderDirection) *V1BillingOrderDirection {
	return &value
}

// Pointer returns a pointer to a freshly-allocated V1BillingOrderDirection.
func (m V1BillingOrderDirection) Pointer() *V1BillingOrderDirection {
	return &m
}

const (

	// V1BillingOrderDirectionDIRECTIONASCENDING captures enum value "DIRECTION_ASCENDING"
	V1BillingOrderDirectionDIRECTIONASCENDING V1BillingOrderDirection = "DIRECTION_ASCENDING"

	// V1BillingOrderDirectionDIRECTIONDESCENDING captures enum value "DIRECTION_DESCENDING"
	V1BillingOrderDirectionDIRECTIONDESCENDING V1BillingOrderDirection = "DIRECTION_DESCENDING"
)

// for schema
var v1BillingOrderDirectionEnum []interface{}

func init() {
	var res []V1BillingOrderDirection
	if err := json.Unmarshal([]byte(`["DIRECTION_ASCENDING","DIRECTION_DESCENDING"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1BillingOrderDirectionEnum = append(v1BillingOrderDirectionEnum, v)
	}
}

func (m V1BillingOrderDirection) validateV1BillingOrderDirectionEnum(path, location string, value V1BillingOrderDirection) error {
	if err := validate.EnumCase(path, location, value, v1BillingOrderDirectionEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this v1 billing order direction
func (m V1BillingOrderDirection) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV1BillingOrderDirectionEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this v1 billing order direction based on context it is used
func (m V1BillingOrderDirection) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
