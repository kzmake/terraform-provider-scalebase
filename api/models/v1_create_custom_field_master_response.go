// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1CreateCustomFieldMasterResponse カスタムフィールドマスター新規追加のレスポンス
//
// swagger:model v1CreateCustomFieldMasterResponse
type V1CreateCustomFieldMasterResponse struct {

	// カスタムフィールドマスター
	CustomFieldMaster *V1CustomFieldMaster `json:"customFieldMaster,omitempty"`
}

// Validate validates this v1 create custom field master response
func (m *V1CreateCustomFieldMasterResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCustomFieldMaster(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1CreateCustomFieldMasterResponse) validateCustomFieldMaster(formats strfmt.Registry) error {
	if swag.IsZero(m.CustomFieldMaster) { // not required
		return nil
	}

	if m.CustomFieldMaster != nil {
		if err := m.CustomFieldMaster.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("customFieldMaster")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("customFieldMaster")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this v1 create custom field master response based on the context it is used
func (m *V1CreateCustomFieldMasterResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateCustomFieldMaster(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1CreateCustomFieldMasterResponse) contextValidateCustomFieldMaster(ctx context.Context, formats strfmt.Registry) error {

	if m.CustomFieldMaster != nil {
		if err := m.CustomFieldMaster.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("customFieldMaster")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("customFieldMaster")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1CreateCustomFieldMasterResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1CreateCustomFieldMasterResponse) UnmarshalBinary(b []byte) error {
	var res V1CreateCustomFieldMasterResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
