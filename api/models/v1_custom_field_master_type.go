// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V1CustomFieldMasterType カスタムフィールドタイプ
//
// swagger:model v1CustomFieldMasterType
type V1CustomFieldMasterType string

func NewV1CustomFieldMasterType(value V1CustomFieldMasterType) *V1CustomFieldMasterType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated V1CustomFieldMasterType.
func (m V1CustomFieldMasterType) Pointer() *V1CustomFieldMasterType {
	return &m
}

const (

	// V1CustomFieldMasterTypeTYPECUSTOMER captures enum value "TYPE_CUSTOMER"
	V1CustomFieldMasterTypeTYPECUSTOMER V1CustomFieldMasterType = "TYPE_CUSTOMER"

	// V1CustomFieldMasterTypeTYPECONTRACT captures enum value "TYPE_CONTRACT"
	V1CustomFieldMasterTypeTYPECONTRACT V1CustomFieldMasterType = "TYPE_CONTRACT"
)

// for schema
var v1CustomFieldMasterTypeEnum []interface{}

func init() {
	var res []V1CustomFieldMasterType
	if err := json.Unmarshal([]byte(`["TYPE_CUSTOMER","TYPE_CONTRACT"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1CustomFieldMasterTypeEnum = append(v1CustomFieldMasterTypeEnum, v)
	}
}

func (m V1CustomFieldMasterType) validateV1CustomFieldMasterTypeEnum(path, location string, value V1CustomFieldMasterType) error {
	if err := validate.EnumCase(path, location, value, v1CustomFieldMasterTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this v1 custom field master type
func (m V1CustomFieldMasterType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV1CustomFieldMasterTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this v1 custom field master type based on context it is used
func (m V1CustomFieldMasterType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
