// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V1AddOptionItemRequestChargeItemTimingUnit 期間単位
//
// - UNIT_MONTHLY: 月
//
// swagger:model v1AddOptionItemRequestChargeItemTimingUnit
type V1AddOptionItemRequestChargeItemTimingUnit string

func NewV1AddOptionItemRequestChargeItemTimingUnit(value V1AddOptionItemRequestChargeItemTimingUnit) *V1AddOptionItemRequestChargeItemTimingUnit {
	return &value
}

// Pointer returns a pointer to a freshly-allocated V1AddOptionItemRequestChargeItemTimingUnit.
func (m V1AddOptionItemRequestChargeItemTimingUnit) Pointer() *V1AddOptionItemRequestChargeItemTimingUnit {
	return &m
}

const (

	// V1AddOptionItemRequestChargeItemTimingUnitUNITMONTHLY captures enum value "UNIT_MONTHLY"
	V1AddOptionItemRequestChargeItemTimingUnitUNITMONTHLY V1AddOptionItemRequestChargeItemTimingUnit = "UNIT_MONTHLY"
)

// for schema
var v1AddOptionItemRequestChargeItemTimingUnitEnum []interface{}

func init() {
	var res []V1AddOptionItemRequestChargeItemTimingUnit
	if err := json.Unmarshal([]byte(`["UNIT_MONTHLY"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1AddOptionItemRequestChargeItemTimingUnitEnum = append(v1AddOptionItemRequestChargeItemTimingUnitEnum, v)
	}
}

func (m V1AddOptionItemRequestChargeItemTimingUnit) validateV1AddOptionItemRequestChargeItemTimingUnitEnum(path, location string, value V1AddOptionItemRequestChargeItemTimingUnit) error {
	if err := validate.EnumCase(path, location, value, v1AddOptionItemRequestChargeItemTimingUnitEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this v1 add option item request charge item timing unit
func (m V1AddOptionItemRequestChargeItemTimingUnit) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV1AddOptionItemRequestChargeItemTimingUnitEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this v1 add option item request charge item timing unit based on context it is used
func (m V1AddOptionItemRequestChargeItemTimingUnit) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
