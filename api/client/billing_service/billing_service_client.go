// Code generated by go-swagger; DO NOT EDIT.

package billing_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new billing service API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for billing service API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	BillingServiceGetBilling(params *BillingServiceGetBillingParams, opts ...ClientOption) (*BillingServiceGetBillingOK, error)

	BillingServiceGetBilling2(params *BillingServiceGetBilling2Params, opts ...ClientOption) (*BillingServiceGetBilling2OK, error)

	BillingServiceListBillings(params *BillingServiceListBillingsParams, opts ...ClientOption) (*BillingServiceListBillingsOK, error)

	BillingServiceListBillings2(params *BillingServiceListBillings2Params, opts ...ClientOption) (*BillingServiceListBillings2OK, error)

	BillingServiceListBillingsByContract(params *BillingServiceListBillingsByContractParams, opts ...ClientOption) (*BillingServiceListBillingsByContractOK, error)

	BillingServiceListBillingsByContract2(params *BillingServiceListBillingsByContract2Params, opts ...ClientOption) (*BillingServiceListBillingsByContract2OK, error)

	BillingServiceSearchBillings(params *BillingServiceSearchBillingsParams, opts ...ClientOption) (*BillingServiceSearchBillingsOK, error)

	BillingServiceSearchBillings2(params *BillingServiceSearchBillings2Params, opts ...ClientOption) (*BillingServiceSearchBillings2OK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
BillingServiceGetBilling 請求の取得s

指定した請求を取得します。
*/
func (a *Client) BillingServiceGetBilling(params *BillingServiceGetBillingParams, opts ...ClientOption) (*BillingServiceGetBillingOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBillingServiceGetBillingParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "BillingService_GetBilling",
		Method:             "POST",
		PathPattern:        "/v1/billing/get",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BillingServiceGetBillingReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*BillingServiceGetBillingOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*BillingServiceGetBillingDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
BillingServiceGetBilling2 請求の取得s

指定した請求を取得します。
*/
func (a *Client) BillingServiceGetBilling2(params *BillingServiceGetBilling2Params, opts ...ClientOption) (*BillingServiceGetBilling2OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBillingServiceGetBilling2Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "BillingService_GetBilling2",
		Method:             "GET",
		PathPattern:        "/v1/billing/get",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BillingServiceGetBilling2Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*BillingServiceGetBilling2OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*BillingServiceGetBilling2Default)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
BillingServiceListBillings 請求の一覧取得s

請求の一覧を取得します。
*/
func (a *Client) BillingServiceListBillings(params *BillingServiceListBillingsParams, opts ...ClientOption) (*BillingServiceListBillingsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBillingServiceListBillingsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "BillingService_ListBillings",
		Method:             "POST",
		PathPattern:        "/v1/billing/list",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BillingServiceListBillingsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*BillingServiceListBillingsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*BillingServiceListBillingsDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
BillingServiceListBillings2 請求の一覧取得s

請求の一覧を取得します。
*/
func (a *Client) BillingServiceListBillings2(params *BillingServiceListBillings2Params, opts ...ClientOption) (*BillingServiceListBillings2OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBillingServiceListBillings2Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "BillingService_ListBillings2",
		Method:             "GET",
		PathPattern:        "/v1/billing/list",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BillingServiceListBillings2Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*BillingServiceListBillings2OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*BillingServiceListBillings2Default)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
BillingServiceListBillingsByContract 契約に紐づく請求の一覧取得s

指定された顧客に紐づく請求の一覧を取得します。
*/
func (a *Client) BillingServiceListBillingsByContract(params *BillingServiceListBillingsByContractParams, opts ...ClientOption) (*BillingServiceListBillingsByContractOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBillingServiceListBillingsByContractParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "BillingService_ListBillingsByContract",
		Method:             "POST",
		PathPattern:        "/v1/billing/listbycontract",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BillingServiceListBillingsByContractReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*BillingServiceListBillingsByContractOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*BillingServiceListBillingsByContractDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
BillingServiceListBillingsByContract2 契約に紐づく請求の一覧取得s

指定された顧客に紐づく請求の一覧を取得します。
*/
func (a *Client) BillingServiceListBillingsByContract2(params *BillingServiceListBillingsByContract2Params, opts ...ClientOption) (*BillingServiceListBillingsByContract2OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBillingServiceListBillingsByContract2Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "BillingService_ListBillingsByContract2",
		Method:             "GET",
		PathPattern:        "/v1/billing/listbycontract",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BillingServiceListBillingsByContract2Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*BillingServiceListBillingsByContract2OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*BillingServiceListBillingsByContract2Default)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
BillingServiceSearchBillings 請求の検索s

請求を検索して一覧を取得します。
*/
func (a *Client) BillingServiceSearchBillings(params *BillingServiceSearchBillingsParams, opts ...ClientOption) (*BillingServiceSearchBillingsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBillingServiceSearchBillingsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "BillingService_SearchBillings",
		Method:             "POST",
		PathPattern:        "/v1/billing/search",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BillingServiceSearchBillingsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*BillingServiceSearchBillingsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*BillingServiceSearchBillingsDefault)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

/*
BillingServiceSearchBillings2 請求の検索s

請求を検索して一覧を取得します。
*/
func (a *Client) BillingServiceSearchBillings2(params *BillingServiceSearchBillings2Params, opts ...ClientOption) (*BillingServiceSearchBillings2OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBillingServiceSearchBillings2Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "BillingService_SearchBillings2",
		Method:             "GET",
		PathPattern:        "/v1/billing/search",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BillingServiceSearchBillings2Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*BillingServiceSearchBillings2OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	unexpectedSuccess := result.(*BillingServiceSearchBillings2Default)
	return nil, runtime.NewAPIError("unexpected success response: content available as default response in error", unexpectedSuccess, unexpectedSuccess.Code())
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
