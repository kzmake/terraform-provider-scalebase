// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/kzmake/terraform-provider-scalebase/api/client/amendment_service"
	"github.com/kzmake/terraform-provider-scalebase/api/client/billing_service"
	"github.com/kzmake/terraform-provider-scalebase/api/client/catalog_item_service"
	"github.com/kzmake/terraform-provider-scalebase/api/client/contract_service"
	"github.com/kzmake/terraform-provider-scalebase/api/client/custom_field_service"
	"github.com/kzmake/terraform-provider-scalebase/api/client/customer_service"
	"github.com/kzmake/terraform-provider-scalebase/api/client/customer_staff_service"
	"github.com/kzmake/terraform-provider-scalebase/api/client/expected_billing_service"
	"github.com/kzmake/terraform-provider-scalebase/api/client/product_service"
	"github.com/kzmake/terraform-provider-scalebase/api/client/usage_service"
	"github.com/kzmake/terraform-provider-scalebase/api/client/zz_health_service"
)

// Default API HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "localhost"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"https"}

// NewHTTPClient creates a new API HTTP client.
func NewHTTPClient(formats strfmt.Registry) *API {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new API HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *API {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new API client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *API {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(API)
	cli.Transport = transport
	cli.AmendmentService = amendment_service.New(transport, formats)
	cli.BillingService = billing_service.New(transport, formats)
	cli.CatalogItemService = catalog_item_service.New(transport, formats)
	cli.ContractService = contract_service.New(transport, formats)
	cli.CustomFieldService = custom_field_service.New(transport, formats)
	cli.CustomerService = customer_service.New(transport, formats)
	cli.CustomerStaffService = customer_staff_service.New(transport, formats)
	cli.ExpectedBillingService = expected_billing_service.New(transport, formats)
	cli.ProductService = product_service.New(transport, formats)
	cli.UsageService = usage_service.New(transport, formats)
	cli.ZzHealthService = zz_health_service.New(transport, formats)
	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// API is a client for API
type API struct {
	AmendmentService amendment_service.ClientService

	BillingService billing_service.ClientService

	CatalogItemService catalog_item_service.ClientService

	ContractService contract_service.ClientService

	CustomFieldService custom_field_service.ClientService

	CustomerService customer_service.ClientService

	CustomerStaffService customer_staff_service.ClientService

	ExpectedBillingService expected_billing_service.ClientService

	ProductService product_service.ClientService

	UsageService usage_service.ClientService

	ZzHealthService zz_health_service.ClientService

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *API) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.AmendmentService.SetTransport(transport)
	c.BillingService.SetTransport(transport)
	c.CatalogItemService.SetTransport(transport)
	c.ContractService.SetTransport(transport)
	c.CustomFieldService.SetTransport(transport)
	c.CustomerService.SetTransport(transport)
	c.CustomerStaffService.SetTransport(transport)
	c.ExpectedBillingService.SetTransport(transport)
	c.ProductService.SetTransport(transport)
	c.UsageService.SetTransport(transport)
	c.ZzHealthService.SetTransport(transport)
}
