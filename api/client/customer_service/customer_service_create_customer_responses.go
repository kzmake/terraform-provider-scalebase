// Code generated by go-swagger; DO NOT EDIT.

package customer_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kzmake/terraform-provider-scalebase/api/models"
)

// CustomerServiceCreateCustomerReader is a Reader for the CustomerServiceCreateCustomer structure.
type CustomerServiceCreateCustomerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CustomerServiceCreateCustomerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCustomerServiceCreateCustomerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewCustomerServiceCreateCustomerDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCustomerServiceCreateCustomerOK creates a CustomerServiceCreateCustomerOK with default headers values
func NewCustomerServiceCreateCustomerOK() *CustomerServiceCreateCustomerOK {
	return &CustomerServiceCreateCustomerOK{}
}

/*
CustomerServiceCreateCustomerOK describes a response with status code 200, with default header values.

A successful response.
*/
type CustomerServiceCreateCustomerOK struct {
	Payload *models.V1CreateCustomerResponse
}

// IsSuccess returns true when this customer service create customer o k response has a 2xx status code
func (o *CustomerServiceCreateCustomerOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this customer service create customer o k response has a 3xx status code
func (o *CustomerServiceCreateCustomerOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this customer service create customer o k response has a 4xx status code
func (o *CustomerServiceCreateCustomerOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this customer service create customer o k response has a 5xx status code
func (o *CustomerServiceCreateCustomerOK) IsServerError() bool {
	return false
}

// IsCode returns true when this customer service create customer o k response a status code equal to that given
func (o *CustomerServiceCreateCustomerOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the customer service create customer o k response
func (o *CustomerServiceCreateCustomerOK) Code() int {
	return 200
}

func (o *CustomerServiceCreateCustomerOK) Error() string {
	return fmt.Sprintf("[POST /v1/customer/create][%d] customerServiceCreateCustomerOK  %+v", 200, o.Payload)
}

func (o *CustomerServiceCreateCustomerOK) String() string {
	return fmt.Sprintf("[POST /v1/customer/create][%d] customerServiceCreateCustomerOK  %+v", 200, o.Payload)
}

func (o *CustomerServiceCreateCustomerOK) GetPayload() *models.V1CreateCustomerResponse {
	return o.Payload
}

func (o *CustomerServiceCreateCustomerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1CreateCustomerResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomerServiceCreateCustomerDefault creates a CustomerServiceCreateCustomerDefault with default headers values
func NewCustomerServiceCreateCustomerDefault(code int) *CustomerServiceCreateCustomerDefault {
	return &CustomerServiceCreateCustomerDefault{
		_statusCode: code,
	}
}

/*
CustomerServiceCreateCustomerDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type CustomerServiceCreateCustomerDefault struct {
	_statusCode int

	Payload *models.GooglerpcStatus
}

// IsSuccess returns true when this customer service create customer default response has a 2xx status code
func (o *CustomerServiceCreateCustomerDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this customer service create customer default response has a 3xx status code
func (o *CustomerServiceCreateCustomerDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this customer service create customer default response has a 4xx status code
func (o *CustomerServiceCreateCustomerDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this customer service create customer default response has a 5xx status code
func (o *CustomerServiceCreateCustomerDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this customer service create customer default response a status code equal to that given
func (o *CustomerServiceCreateCustomerDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the customer service create customer default response
func (o *CustomerServiceCreateCustomerDefault) Code() int {
	return o._statusCode
}

func (o *CustomerServiceCreateCustomerDefault) Error() string {
	return fmt.Sprintf("[POST /v1/customer/create][%d] CustomerService_CreateCustomer default  %+v", o._statusCode, o.Payload)
}

func (o *CustomerServiceCreateCustomerDefault) String() string {
	return fmt.Sprintf("[POST /v1/customer/create][%d] CustomerService_CreateCustomer default  %+v", o._statusCode, o.Payload)
}

func (o *CustomerServiceCreateCustomerDefault) GetPayload() *models.GooglerpcStatus {
	return o.Payload
}

func (o *CustomerServiceCreateCustomerDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GooglerpcStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
